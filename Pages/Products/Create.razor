@page "/products/create"
@using Microsoft.EntityFrameworkCore

@inject AppDbContext _context
@inject NavigationManager _navigationManager

<h3>New Product</h3>

<EditForm Model="_model" OnValidSubmit="@HandleValidSubmitAsync">

    <DataAnnotationsValidator/>
    <ValidationSummary />

    <div class="mb-3">
        <label for="Title" class="form-label">Title</label>
        <InputText class="form-control"
                   type="text"
                   id="Title"
                   @bind-Value="_model.Title" />
    </div>

    <div class="mb-3">
        <label for="Price" class="form-label">Price</label>
        <InputNumber class="form-control"
                     type="text"
                     id="Price"
                     @bind-Value="_model.Price" />
    </div>

    <div class="mb-3">
        <label for="CategoryId" class="form-label">Category</label>
        <InputSelect class="form-control"
                     id="CategoryId"
                     @bind-Value="_model.CategoryId">
            @foreach (var category in _categories)
            {
                <option value="@category.Id">@category.Title</option>
            }
        </InputSelect>
    </div>

    <button class="btn btn-success" type="submit">SAVE</button>

</EditForm>

@code {
    private Product _model = new();
    private List<Category> _categories = new();

    protected override async Task OnInitializedAsync()
    {
        _categories = await _context
            .Categories
            .AsNoTracking()
            .ToListAsync();

        _model.CategoryId = _categories[0].Id;
    }

    async Task HandleValidSubmitAsync()
    {
        try
        {
            await _context.Products.AddAsync(_model);
            await _context.SaveChangesAsync();
            _navigationManager.NavigateTo("/products");
        }
        catch (Exception ex)
        {
            var msg = ex.Message;
        }
    }

}
